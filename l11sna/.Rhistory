cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
cgss2013 <- read.dta("~/DATA/CGSS/2013/cgss2013_14.dta",encoding="gbk")
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta",encoding = "gb2312")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013_14 <- read_sav("~/DATA/CGSS/2003-2013/2013/cgss2013_14.sav")
View(cgss2013_14)
str(cgss2013_14)
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2003$a4)
str(cgss2013$a4)
str(cgss2013$a5)
names(cgss2013)
table(cgss2013$a10)
get_labels(cgss2013$a10)
sjlabelled::get_labels(cgss2013$a10)
sys.getenv("phantomjs")
Sys.getenv("phantomjs")
Sys.setenv(phantomjs="/Users/liding/anaconda/phantomjs/bin")
Sys.getenv("phantomjs")
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京"
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library(magrittr)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
Sys.getenv("phantomjs")
library(rJava);
library(Rwordseg);
library(tmcn);
require(rJava)
java -version
require(openNLP)
install.packages("openNLP")
install.packages("openNLP")
library(Rwordseg);
library(rJava);
require(openNLP)
library(tmcn);
library(Rwordseg);
install.packages("Rwordseg", repos = "http://R-Forge.R-project.org")
install.packages("Rwordseg", repos = "http://R-Forge.R-project.org")
library(Rwordseg);
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
library(rJava);
library(Rwordseg);
library(tmcn);
install.packages("rJava")
install.packages("rJava")
library(rJava);
library(Rwordseg);
library(tmcn);
library(rJava);
library(tmcn);
library(Rwordseg);
library(Rwordseg);
library(rJava);
library(tmcn);
library(Rwordseg);
library(rJava);
library(Rwordseg);
library(tmcn);
library(rJava);
library(tmcn);
library(Rwordseg);
remove.packages("rJava")
library(rJava);
.libPaths().
.libPaths()
remove.packages("rJava","/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(rJava);
library(rJava);
install.packages("rJava")
library(rJava);
library(tmcn);
library(Rwordseg);
.libPaths()
library(rJava);
library(tmcn);
library(Rwordseg);
remove.packages("rJava")
library(rJava);
library(tmcn);
library(Rwordseg);
install.packages("rJava")
library(Rwordseg);
remove.packages("rJava")
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
library(Rwordseg);
library(Rwordseg);
require(openNLP)
library(Rwordseg);
setwd("/Users/liding/E/Bdata/liding17/2017R/l13text/intro/data")
a <-"十八大以来，中央在选用干部的思路上强调不搞表面文章、唯才是用、注重实效，布小林此番进步，正因为她是符合实际需要的人选，可谓举贤不避亲。"
nchar(a) #计算字符串长度
strsplit(a,split="，") #字符串切割
avec <- unlist(strsplit(a,split="，"))  #字符串拼接
paste(avec,collapse=",")
substr(a, 1,13)  #字符串截取
lecture<-read.csv("samgov1.csv",encoding="utf-8")
head(lecture)
nchar(lecture) #计算字符串长度
n=length(lecture[,1]);
print(n)
res=gsub(pattern="http:[a-zA-Z\\/\\.0-9]+","",res);
res=lecture[lecture!=" "];
ls()
#fix(res)
res=gsub(pattern="http:[a-zA-Z\\/\\.0-9]+","",res);
res=gsub(pattern="[我|你|的|了|一下|一个|没有|这样|现在|原告|被告|北京|法院|简称]","",res);
res=gsub(pattern="/^[^0-9]*$/","",res);
installDict("科学发展观.scel","kxfzg")
installDict("xinli.scel","xinli") # 心理学
installDict("zzx.scel","zzx") # 政治学
listDict()
uninstallDict()
# == 临时添加新词
insertWords("百忙之中")
insertWords("白忙")
segmentCN("崇仁陈坊村书记游桂发与崇仁县森林公安分局大队长朱鹰勾结指使人将林木一伐而光当今天国家大力提倡退耕还林、保护我们日益生存环境的同时，竟然有无视法律的森林公安分局警官、村干部及村民做出如此令人痛心的勾当，不揭发难于平民愤。事情从2007年初说起，江西省抚州市崇仁县相山镇陈坊村民委员会书记游XX与崇仁县森林公安分局大队长朱X（主管相山镇山林）勾结，指示陈坊村委会茶坪村小组的组长谢XX、谢XX先后请了两批砍伐工人，将茶坪村老辽、南美坑等山地的阔叶林木一伐而光。砍伐时间长达1年、涉及原始森林面积大约1800亩、当时的价值约100多万元。据当地村小组的村民说：这片森林在国民党时期都没有砍伐，但就在江西省启动天然阔叶林保护工程，全省禁伐天然阔叶林木时，却被毁于一旦。昔日1800多亩的原始森林现是疮痍满目、荒芜一片，看了让人无比的心痛。由于这勾当没有得到应有的制裁，更是无法无天了。2008年7月，几个福建商人明目张胆地，砍伐茶坪村村口一棵几百年的红豆杉，然后把伐断的红豆杉安然无恙运回福建。在福建商人开始运红豆杉时，就有村委会的干部向朱鹰报告，但没有任何结果，过了六天后朱鹰才来到红豆杉被砍伐的现场。这是失职吗？几个外省人怎会知道江西省崇仁县一个山旮旯的地方有如此珍稀的古木呢？红豆杉：国家一级保护植物，有“活化石植物”之称，是濒危物种，像茶坪村口这棵几百年的红豆杉更是珍稀。茶坪村现还有三棵同样大的红豆杉，不知什么时候又要被毁。其实这事有记者采访过，后公安部门派人到那里查。而谢XX被当替死鬼，被公安部门通缉，常年在外省躲藏，由游XX和朱X等人提供资金支持。不让他们回来。据说当时叫他们走的时候每人给了十万块钱。而真正的罪魁祸首游XX、朱X却拿着人民的几百万逍遥法外。这本不是和谐社会应该有的现象。希望政府部门重视。否则法将不法，国将不国。地方官方一手遮天，山高皇帝远。我深爱这个国家，深爱这个民族，我心所以会痛啊。呼吁有关部门，打击这帮无法无天为了私利的盗木者，将他们绳之于法，使我们现存的绿色家园不再被毁!这事情已经过去几年了，当地农民也是投诉无门，只能吃哑巴亏了，在那个靠山吃山的村庄，没有山的村民纷纷向下游迁徙，现在的茶坪村已经空无一人，以前多美丽的村庄，如今成了这样，不得不叫人寒心。")
segmentCN("崇仁陈坊村书记游桂发与崇仁县森林公安分局大队长朱鹰勾结指使人将林木一伐而光当今天国家大力提倡退耕还林", nature=TRUE)
insertWords(c("崇仁","陈坊","勾结指使"))
segmentCN("崇仁陈坊村书记游桂发与崇仁县森林公安分局大队长朱鹰勾结指使人将林木一伐而光当今天国家大力提倡退耕还林", nature=TRUE)
segmentCN(c("习近平前往美国出席第四届核安全峰会", "李克强：推进上海建设科技创新中心", "洪秀柱就任国民党主席 着蓝衣接证书及印信"))
words=unlist(lapply(X=res, FUN=segmentCN));
word=lapply(X=words, FUN=strsplit, " ");
v=table(unlist(word));
summary(v)
v=rev(sort(v));
d=data.frame(word=names(v), freq=v);
head(d)
d=subset(d, nchar(as.character(d$word))>1 & d$freq.Freq>=2)
names(d)<-c("word","var","freq")
library(wordcloud)
require(scales)
library(RColorBrewer)
par(family="SimSun")
wordcloud(d$word,d$freq,random.order=FALSE,rot.per=.45,col=brewer.pal(9,"Set1"))
wordcloud(d$word,d$freq,random.order=FALSE,rot.per=.45,col=rainbow(length(d$freq)),max.words=100)
wordcloud(names(d$freq), d$freq, min.freq=100, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(d$freq), d$freq, max.words=100, rot.per=0.2, colors=brewer.pal(6, "Dark2"))
wordcloud(names(d$freq), d$freq, min.freq=100, scale=c(5, .1), colors=brewer.pal(6, "Dark2"))
wordcloud(names(d$freq), d$freq, min.freq=100, scale=c(5,.1), colors=brewer.pal(6, "Dark2"))
library(wordcloud)
require(scales)
library(RColorBrewer)
wordcloud(names(d$freq), d$freq, min.freq=100, scale=c(5,.1), colors=brewer.pal(6, "Dark2"))
wordcloud(d$word,d$freq,random.order=FALSE,rot.per=.45,col=rainbow(length(d$freq)))
wordcloud(names(d$freq), d$freq, max.words=100, rot.per=0.2, colors=brewer.pal(6, "Dark2"))
wordcloud(names(d$freq), d$freq, max.words=100, rot.per=0.2, colors=brewer.pal(8, "Dark2"))
wordcloud(d$freq, d$freq, max.words=100, rot.per=0.2, colors=brewer.pal(8, "Dark2"))
wordcloud(d$word, d$freq, min.freq=100, scale=c(5,.1), colors=brewer.pal(6, "Dark2"))
wordcloud(d$word, d$freq, max.words=100, rot.per=0.2, colors=brewer.pal(8, "Dark2"))
library(wordcloud2)
wordcloud2(demoFreqC)
wordcloud2(demoFreq)
wordcloud2(d)
head(demoFreq)
head(d)
str(demoFreq)
d <- d[,-2]
head(d)
wordcloud2(d)
wordcloud2(d,shape="diamond")
wordcloud2(d, figpath="/Users/liding/OneDrive/temp/niu.jpg")
wordcloud2(d, figPath="/Users/liding/OneDrive/temp/niu.jpg")
library(jiebaR)
engine<-worker()
words<-"想学R语言，那就赶紧拿起手机，打开微信，关注公众号《跟着菜鸟一起学R语言》，跟着菜鸟一块飞。"
segment(words,engine)
engine<=words
engine_new_word<-worker()
new_user_word(engine_new_word, c("公众号","R语言"))
segment(words,engine_new_word)
engine_user<-worker(user='dictionary.txt')
segment(words,engine_user)
engine_user<-worker(user='dictionary.txt')
segment(words,engine_user)
new_user_word(engine_new_word,
scan("dictionary.txt",what="",sep="\n"))
segment(words,engine_new_word)
engine<= "江州市长江大桥参加了长江大桥的通车仪式"
engine_user<-worker(user='dictionary.txt')
segment(words,engine_user)
new_user_word(engine_new_word,
scan("dictionary.txt",what="",sep="\n"))
segment(words,engine_new_word)
# 停用词
engine_s<-worker(stop_word = "stopword.txt")
segment(words,engine_s)
freq(segment(words,engine))
qseg[words]
qseg<=words
tagger<-worker(type="tag")
tagger<=words
keys<-worker(type="keywords",topn=2)
keys<=words
keys2<-worker(type="simhash",topn=2)
keys2<=words
library(Rdouban)
qxde<-user_book_status(userid='qxde01',verbose=FALSE)
data(stopwords) ## 中文停止词
## 生成用户qxde01的2013年阅读信息可视化图形
user_book_viz(x=qxde,YEAR="2013",stopwords=stopwords,back=TRUE)
engine <= res
res=lecture[lecture!=" "];
ls()
#fix(res)
#剔除URL
res=gsub(pattern="http:[a-zA-Z\\/\\.0-9]+","",res);
#剔除特殊词
res=gsub(pattern="[我|你|的|了|一下|一个|没有|这样|现在|原告|被告|北京|法院|简称]","",res);
#剔除数字
res=gsub(pattern="/^[^0-9]*$/","",res);
head(res)
lecture<-read.csv("samgov1.csv",encoding="utf-8")
head(lecture)
nchar(lecture) #计算字符串长度
n=length(lecture[,1]);
print(n)
res=lecture[lecture!=" "];
res=gsub(pattern="http:[a-zA-Z\\/\\.0-9]+","",res);
res=gsub(pattern="[我|你|的|了|一下|一个|没有|这样|现在|原告|被告|北京|法院|简称]","",res);
res=gsub(pattern="/^[^0-9]*$/","",res);
engine <= lecture[,2]
setwd("/Users/liding/E/Bdata/liding17/2017R/l11sna/")
nodes <- read.csv("./Data/Dataset1-Media-Example-NODES.csv", header=T, as.is=T)
links <- read.csv("./Data/Dataset1-Media-Example-EDGES.csv", header=T, as.is=T)
head(nodes)
head(links)
nrow(nodes); length(unique(nodes$id))
nrow(links);
nrow(unique(links[,c("from", "to")]))
nrow(unique(links[,c("from", "to", "type")]))
links <- aggregate(links[,3], links[,-3], sum)
links <- links[order(links$from, links$to),]
colnames(links)[4] <- "weight"
rownames(links) <- NULL
nrow(links); nrow(unique(links[,c("from", "to")]))
nodes2 <- read.csv("./Data/Dataset2-Media-User-Example-NODES.csv", header=T, as.is=T)
links2 <- read.csv("./Data/Dataset2-Media-User-Example-EDGES.csv", header=T, row.names=1)
head(nodes2)
head(links2)
links2 <- as.matrix(links2)
dim(links2)
dim(nodes2)
library("igraph")
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# Examine the resulting object:
class(net)
net
E(net)
V(net)
E(net)$type
V(net)$media
V(net)[media=="BBC"]
E(net)[type=="mention"]
V(net)[media=="CNN"]
E(net)[type=="hyperlink"]
length(E(net)[type=="hyperlink"])
nrow(V(net))
as_edgelist(net, names=T)
as_adjacency_matrix(net, attr="weight")
# Or data frames describing nodes and edges:
as_data_frame(net, what="edges")
as_data_frame(net, what="vertices")
net[1,]
net[5,7]
plot(net) # not pretty!
net <- simplify(net, remove.multiple = F, remove.loops = T)
plot(net, edge.arrow.size=.4,vertex.label=NA)
head(nodes2)
head(links2)
net2 <- graph_from_incidence_matrix(links2)
table(V(net2)$type)
plot(net2,vertex.label=NA)
class(net2)
net2
net2[1,]
net2[,1]
net2[1,11]
?igraph.plotting
plot(net, edge.arrow.size=.4, edge.curved=.1)
plot(net, edge.arrow.size=.4, edge.curved=0,
vertex.color="orange", vertex.frame.color="#555555",
vertex.label=V(net)$media, vertex.label.color="black",
vertex.label.cex=.7)
colrs <- c("gray50", "tomato", "gold")
V(net)$color <- colrs[V(net)$media.type]
colrs[V(net)$media.type]
(deg <- degree(net, mode="all"))
V(net)$size <- deg*3
V(net)$size <- V(net)$audience.size*0.6
V(net)$label.color <- "black"
V(net)$label <- NA
E(net)$width <- E(net)$weight/6
E(net)$arrow.size <- .2
E(net)$edge.color <- "gray80"
plot(net)
plot(net, edge.color="orange", vertex.color="gray50")
plot(net)
legend(x=-1.1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2.5, bty="n", ncol=3)
plot(net, vertex.shape="none", vertex.label=V(net)$media,
vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=1.2, edge.color="gray90")
ends(net, es=E(net), names=F)
edge.start <- ends(net, es=E(net), names=F)[,1] # get the "from" node
edge.start
V(net)$color[edge.start]
edge.col <- V(net)$color[edge.start]
plot(net, edge.color=edge.col, edge.curved=.1)
net.bg <- sample_pa(80, 1.2)
V(net.bg)$size <- 8
V(net.bg)$frame.color <- "white"
V(net.bg)$color <- "orange"
V(net.bg)$label <- ""
E(net.bg)$arrow.mode <- 0
plot(net.bg)
plot(net.bg, layout=layout_randomly)
l <- layout_in_circle(net.bg)
plot(net.bg, layout=l)
l
vcount(net.bg)
ecount(net.bg)
1:80
c(1, vcount(net.bg):2)
l <- cbind(1:vcount(net.bg), c(1, vcount(net.bg):2))
plot(net.bg, layout=l)
l <- layout_randomly(net.bg)
plot(net.bg, layout=l)
l <- layout_in_circle(net.bg)
plot(net.bg, layout=l)
l <- layout_on_sphere(net.bg)
plot(net.bg, layout=l)
l <- layout_with_fr(net.bg)
plot(net.bg, layout=l)
par(mfrow=c(2,2), mar=c(1,1,1,1))
plot(net.bg, layout=layout_with_fr)
plot(net.bg, layout=layout_with_fr)
plot(net.bg, layout=l)
plot(net.bg, layout=l)
dev.off()
l <- layout_with_fr(net.bg)
l <- norm_coords(l, ymin=-1, ymax=1, xmin=-1, xmax=1)
par(mfrow=c(2,2), mar=c(0,0,0,0))
plot(net.bg, rescale=F, layout=l*0.4)
plot(net.bg, rescale=F, layout=l*0.8)
plot(net.bg, rescale=F, layout=l*1.2)
plot(net.bg, rescale=F, layout=l*1.6)
dev.off()
l <- layout_with_kk(net.bg)
plot(net.bg, layout=l)
plot(net.bg, layout=layout_with_mds)
plot(net.bg, layout=layout_with_lgl)
?igraph::layout_
layouts <- grep("^layout_", ls("package:igraph"), value=TRUE)[-1]
layouts <- layouts[!grepl("bipartite|merge|norm|sugiyama|tree", layouts)]
par(mfrow=c(3,3), mar=c(1,1,1,1))
for (layout in layouts) {
print(layout)
l <- do.call(layout, list(net))
plot(net, edge.arrow.mode=0, layout=l, main=layout) }
dev.off()
plot(net)
hist(links$weight)
mean(links$weight)
sd(links$weight)
cut.off <- mean(links$weight)
net.sp <- delete_edges(net, E(net)[weight<cut.off])
plot(net.sp)
E(net)$width <- 2
plot(net, edge.color=c("dark red", "slategrey")[(E(net)$type=="hyperlink")+1],
vertex.color="gray40", layout=layout_in_circle, edge.curved=.3)
net.m <- net - E(net)[E(net)$type=="hyperlink"]
net.h <- net - E(net)[E(net)$type=="mention"]
par(mfrow=c(1,2))
plot(net.h, vertex.color="orange", main="Tie: Hyperlink")
plot(net.m, vertex.color="lightsteelblue2", main="Tie: Mention")
dev.off()
par(mfrow=c(1,2),mar=c(1,1,4,1))
l <- layout_with_fr(net)
plot(net.h, vertex.color="orange", layout=l, main="Tie: Hyperlink")
plot(net.m, vertex.color="lightsteelblue2", layout=l, main="Tie: Mention")
dev.off()
clp <- cluster_label_prop(net)
class(clp)
str(clp)
clp$membership
clp$modularity
plot(clp, net)
V(net)$community <- clp$membership
colrs <- adjustcolor( c("gray50", "tomato", "gold", "yellowgreen"), alpha=.6)
plot(net, vertex.color=colrs[V(net)$community])
dist.from.NYT <- distances(net, v=V(net)[media=="NY Times"], to=V(net), weights=NA)
oranges <- colorRampPalette(c("dark red", "gold"))
col <- oranges(max(dist.from.NYT)+1)
col <- col[dist.from.NYT+1]
plot(net, vertex.color=col, vertex.label=dist.from.NYT, edge.arrow.size=.6,
vertex.label.color="white")
news.path <- shortest_paths(net,
from = V(net)[media=="MSNBC"],
to  = V(net)[media=="New York Post"],
output = "both") # both path nodes and edges
ecol <- rep("gray80", ecount(net))
ecol[unlist(news.path$epath)] <- "orange"
ew <- rep(2, ecount(net))
ew[unlist(news.path$epath)] <- 4
vcol <- rep("gray40", vcount(net))
vcol[unlist(news.path$vpath)] <- "gold"
plot(net, vertex.color=vcol, edge.color=ecol,
edge.width=ew, edge.arrow.mode=0)
inc.edges <- incident(net, V(net)[media=="Wall Street Journal"], mode="all")
ecol <- rep("gray80", ecount(net))
ecol[inc.edges] <- "orange"
vcol <- rep("grey40", vcount(net))
vcol[V(net)$media=="Wall Street Journal"] <- "gold"
plot(net, vertex.color=vcol, edge.color=ecol)
neigh.nodes <- neighbors(net, V(net)[media=="Wall Street Journal"], mode="out")
vcol[neigh.nodes] <- "#ff9d00"
plot(net, vertex.color=vcol)
plot(net, mark.groups=c(1,4,5,8), mark.col="#C5E5E7", mark.border=NA)
plot(net, mark.groups=list(c(1,4,5,8), c(15:17)),
mark.col=c("#C5E5E7","#ECD89A"), mark.border=NA)
tkid <- tkplot(net) #tkid is the id of the tkplot
l <- tkplot.getcoords(tkid) # grab the coordinates from tkplot
plot(net, layout=l)
netm <- as_adjacency_matrix(net, attr="weight", sparse=F)
tkid <- tkplot(net) #tkid is the id of the tkplot
l <- tkplot.getcoords(tkid) # grab the coordinates from tkplot
plot(net, layout=l)
netm <- as_adjacency_matrix(net, attr="weight", sparse=F)
colnames(netm) <- V(net)$media
rownames(netm) <- V(net)$media
palf <- colorRampPalette(c("gold", "dark orange"))
heatmap(netm[,17:1], Rowv = NA, Colv = NA, col = palf(20),
scale="none", margins=c(10,10) )
deg.dist <- degree_distribution(net, cumulative=T, mode="all")
plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.4, col="orange",
xlab="Degree", ylab="Cumulative Frequency")
head(nodes2)
head(links2)
net2
plot(net2)
V(net2)$color <- c("steel blue", "orange")[V(net2)$type+1]
V(net2)$shape <- c("square", "circle")[V(net2)$type+1]
V(net2)$label <- ""
V(net2)$label[V(net2)$type==F] <- nodes2$media[V(net2)$type==F]
V(net2)$label.cex=.6
V(net2)$label.font=2
plot(net2, vertex.label.color="white", vertex.size=(2-V(net2)$type)*8)
plot(net2, vertex.label=NA, vertex.size=7, layout=layout_as_bipartite)
par(mar=c(0,0,0,0))
plot(net2, vertex.shape="none", vertex.label=nodes2$media,
vertex.label.color=V(net2)$color, vertex.label.font=2,
vertex.label.cex=.95, edge.color="gray70",  edge.width=2)
dev.off()
library("png")
img.1 <- readPNG("./Data/images/news.png")
img.2 <- readPNG("./Data/images/user.png")
V(net2)$raster <- list(img.1, img.2)[V(net2)$type+1]
par(mar=c(3,3,3,3))
plot(net2, vertex.shape="raster", vertex.label=NA,
vertex.size=16, vertex.size2=16, edge.width=2)
img.3 <- readPNG("./Data/images/puppy.png")
rasterImage(img.3,  xleft=-1.7, xright=0, ybottom=-1.2, ytop=0)
dev.off()
detach("package:png")
net2.bp <- bipartite.projection(net2)
par(mfrow=c(1,2))
plot(net2.bp$proj1, vertex.label.color="black", vertex.label.dist=1,
vertex.label=nodes2$media[!is.na(nodes2$media.type)])
plot(net2.bp$proj2, vertex.label.color="black", vertex.label.dist=1,
vertex.label=nodes2$media[ is.na(nodes2$media.type)])
dev.off()
detach("package:igraph")
dev.off()
detach("package:igraph")
library("network")
head(links)
head(nodes)
?edgeset.constructors
net3 <- network(links, vertex.attr=nodes, matrix.type="edgelist",
loops=F, multiple=F, ignore.eval = F)
net3
net3[,]
net3 %n% "net.name" <- "Media Network" #  network attribute
net3 %v% "media"    # Node attribute
net3 %e% "type"     # Node attribute
net3 %v% "col" <- c("gray70", "tomato", "gold")[net3 %v% "media.type"]
plot(net3, vertex.cex=(net3 %v% "audience.size")/7, vertex.col="col")
?plot.network
l <- plot(net3, vertex.cex=(net3 %v% "audience.size")/7, vertex.col="col")
plot(net3, vertex.cex=(net3 %v% "audience.size")/7, vertex.col="col", coord=l)
plot(net3, vertex.cex=(net3 %v% "audience.size")/7, vertex.col="col", interactive=T)
