seq_range(x1, n = 5)
seq_range(x1, n = 5, trim = 0.10)
seq_range(x1, n = 5, trim = 0.25)
seq_range(x1, n = 5, trim = 0.50)
ggplot(grid, aes(x1, pred, colour = x2, group = x2)) +
geom_line() +
facet_wrap(~ model)
ggplot(grid, aes(x2, pred, colour = x1, group = x1)) +
geom_line() +
facet_wrap(~ model)
model_matrix(df, y ~ I(x^2) + x)
df <- tribble(
~y, ~x,
1,  1,
2,  2,
3,  3
)
model_matrix(df, y ~ x^2 + x)
model_matrix(df, y ~ I(x^2) + x)
model_matrix(df, y ~ poly(x, 2))
library(splines)
model_matrix(df, y ~ ns(x, 2))
library(splines)
model_matrix(df, y ~ ns(x, 2))
# 模拟一个非线性回归
sim5 <- tibble(
x = seq(0, 3.5 * pi, length = 50),
y = 4 * sin(x) + rnorm(length(x))
)
ggplot(sim5, aes(x, y)) +
geom_point()
mod1 <- lm(y ~ ns(x, 1), data = sim5)
mod2 <- lm(y ~ ns(x, 2), data = sim5)
mod3 <- lm(y ~ ns(x, 3), data = sim5)
mod4 <- lm(y ~ ns(x, 4), data = sim5)
mod5 <- lm(y ~ ns(x, 5), data = sim5)
grid <- sim5 %>%
data_grid(x = seq_range(x, n = 50, expand = 0.1)) %>%
gather_predictions(mod1, mod2, mod3, mod4, mod5, .pred = "y")
ggplot(sim5, aes(x, y)) +
geom_point() +
geom_line(data = grid, colour = "red") +
facet_wrap(~ model)
df <- tribble(
~x, ~y,
1, 2.2,
2, NA,
3, 3.5,
4, 8.3,
NA, 10
)
mod <- lm(y ~ x, data = df)
options(na.action = na.warn)
mod <- lm(y ~ x, data = df)
mod <- lm(y ~ x, data = df, na.action = na.exclude)
mod <- lm(y ~ x, data = df, na.action = na.exclude)
nobs(mod)
set.seed(1)
x <- seq(1,5,length.out=100)
noise <- rnorm(n =100, mean =0, sd = 1)
beta0 <- 1
beta1 <- 2
y <- beta0+ beta1*x +noise
plot(y ~ x)
model <- lm(y ~x)  # 生成了一个model 对象
plot(y~x)
abline(model)
summary(model)
model.matrix(model)
names(model)
ybar <- mean(y)
yPred <- model$fitted.values
Rsquared <- sum((yPred-ybar)^2)/sum((y-ybar)^2)
sqrt(sum(model$residuals^2)/98) # 自由度n-2
yConf <- predict(model,interval= 'confidence')
yPred <- predict(model,interval= 'prediction')
plot(y~x,col='grey',pch=16)
yConf <- as.data.frame(yConf)
yPred <- as.data.frame(yPred)
lines(yConf$lwr~x,col='black',lty=3)
lines(yConf$upr~x,col='black',lty=3)
lines(yPred$lwr~x,col='black',lty=2)
lines(yPred$upr~x,col='black',lty=2)
lines(yPred$fix~x,col='black',lty=1)
lines(yPred$fix~x,col='black',lty=1)
lines(yPred$fit~x,col='black',lty=1)
set.seed(1)
x <- factor(rep(c(0,1),each=30))
y <- c(rnorm(30,0,1),rnorm(30,1,1))
plot(y~x)
model <- lm(y~x)
summary(model)
model.matrix(model)
set.seed(1)
x<-seq(1,5,length.out=100)
noise<-rnorm(n=100,mean=0,sd=1)
beta0<-1
beta1<-2
y<-beta0+beta1*x^2+noise
model<-lm(y~x)
summary(model)
plot(y~x)
abline(model)
plot(model$residuals~x)
model2<-lm(y~x+I(x^2))
summary(model2)
plot(model2$residuals~x)
model3<- update(model2, y ~ . -x)
summary(model3)
plot(model3$residuals~x)
AIC(model,model2,model3)
set.seed(123456)
x = rnorm(500,1,1)
b0 = 1 # intercept chosen at your choice
b1 = 1 # coef chosen at your choice
h = function(x) 1+.4*x # h performs heteroscedasticity function (here
#I used a linear one)
eps = rnorm(500,0,h(x))
y = b0 + b1*x + eps
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
model<-lm(y~x)
plot(model$residuals~x)
set.seed(12356)
x = rnorm(500,1,1)
b0 = 1 # intercept
b1 = 1 # coef
h = function(x) 1+.4*x # h performs heteroscedasticity function (here a linear one)
eps = rnorm(500,0,h(x))
y = b0 + b1*x + eps
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
model<-lm(y~x)
plot(model$residuals~x)
summary(model)
require("sandwich")
require("lmtest")
model$newse<-vcovHC(model)
coeftest(model,model$newse)
par(mfrow = c(1, 1))
x <- seq(-4, 4, length = 100)
y1 <- dnorm(x)
plot(x, y1, type = "l", lwd = 2, col = "blue")
y2 <- dnorm(x, m = 0, sd = 2)
lines(x, y2, type = "l", lwd = 2, col = "red")
pnorm(1.96)
pnorm(1.96, lower.tail = FALSE)
qnorm(0.95) # p = .05, one-tailed (upper)
qnorm(c(0.025, 0.975)) # p = .05, two-tailed
table(cgss2013$a7a)
as.data.frame(table(cgss2013$a7a))
cgss2013 <- cgss2013 %>%
mutate(edu = fct_collapse(a7a,
"私塾"="小学",
"初中"=c("其他","初中","技校"),
"高中"=c("职业高中","普通高中","中专"),
"大学"=c("60-69大学专科(成人高等教育)","大学专科(正规高等教育)","大学本科(成人高等教育)","大学本科(正规高等教育)","研究生以上")))
cgss2013 <- cgss2013 %>%
mutate(edu = fct_collapse(a7a,
"私塾"="小学",
"初中"=c("其他","初中","技校"),
"高中"=c("职业高中","普通高中","中专"),
"大学"=c("大学专科(成人高等教育)","大学专科(正规高等教育)","大学本科(成人高等教育)","大学本科(正规高等教育)","研究生以上")))
lm_inc <- lm(a8a ~ I(2013-a3a) + a2, data = cgss2013)
lm_inc2 <- lm(a8a ~ I(2013-a3a) + a2 + edu, data = cgss2013)
coeftest(lm.model, vcov.=vcovHC(lm.model, type="HC1))
# -------------------------------------------
# --CGSS2003的例子
# -------------------------------------------
# 读入数据并进行预处理
setwd("/Users/liding/E/Bdata/liding17/2017R/lesson9/")
cgss2013 <- read_spss("cgss2013.sav")
# cgss2013 <- read_stata("/Users/liding/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
#定义一个函数方便查看数据集中的变量和变量标签
des <- function (dfile) {
lbl = sapply(dfile, attr, 'label')
if (is.list(lbl)) {
lbl[sapply(lbl, is.null)] = ''
lbl[sapply(lbl, length) > 1] = ''
lbl = unlist(lbl)
}
Encoding(lbl) = 'UTF-8'
dfile_var = data.frame(var =names(dfile), lbl = lbl)
View(dfile_var)
}
# 通过View数据框的方式查看有哪些变量
des(cgss2013)
#替换用户定义缺失值为系统缺失值
cgss2013[cgss2013==-1] <- NA
cgss2013[cgss2013==-2] <- NA
cgss2013[cgss2013==-3] <- NA
cgss2013[cgss2013==9999997] <- NA
cgss2013[cgss2013==9999998] <- NA
cgss2013[cgss2013==9999999] <- NA
# 删除没有用到的取值标签
cgss2013 <- sjlabelled::drop_labels(cgss2013)
#将还有取值标签的变量转为因子，无取值标签的变量仍然为labelled类型
cgss2013 <- sjmisc::to_label(cgss2013)
#将剩余的labelled变量，都转化为普通数值变量
w <- which(sapply(cgss2013, class) == 'labelled')
cgss2013[w]<- lapply(cgss2013[w], function(x) as.numeric(as.character(x)))
cgss2013 <- cgss2013 %>%
mutate(edu = fct_collapse(a7a,
"私塾"="小学",
"初中"=c("其他","初中","技校"),
"高中"=c("职业高中","普通高中","中专"),
"大学"=c("大学专科(成人高等教育)","大学专科(正规高等教育)","大学本科(成人高等教育)","大学本科(正规高等教育)","研究生以上")))
#回归分析
lm_inc <- lm(a8a ~ I(2013-a3a) + a2, data = cgss2013)
# 查看结果
summary(lm_inc)
anova(lm_inc)
# 检验图
par(mfrow = c(2, 2))
plot(lm_inc)
#置信区间
confint(lm_inc)
# 使用sj包输出回归结果
sjp.lm(lm_inc)
coeftest(lm.model, vcov.=vcovHC(lm.model, type="HC1"))
coeftest(model, vcov.=vcovHC(model, type="HC1"))
wlsmodel = lm(y ~ x, weights=1/(1+0.4*x))
set.seed(12356)
x = rnorm(500,1,1)
b0 = 1 # intercept
b1 = 1 # coef
h = function(x) 1+.4*x # h performs heteroscedasticity function (here a linear one)
eps = rnorm(500,0,h(x))
y = b0 + b1*x + eps
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
#残差-x分布
model<-lm(y~x)
summary(model)
plot(model$residuals~x)
wlsmodel = lm(y ~ x, weights=1/(1+0.4*x))
abline(wlsmodel$coefficients,lty=3)
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
abline(wlsmodel$coefficients,lty=3)
par(mfcol=c(1,1))
plot(x,y)
abline(lsfit(x,y))
abline(b0,b1,col=2)
abline(wlsmodel$coefficients,lty=3)
libs <- c("plyr", "dplyr", "ggplot2", "arm")
sapply(libs, require, character.only = TRUE)
anes <- read.dta("/Users/liding/E/Bdata/Course/2R/stanford/Tutorial2data/anescum.dta", warn.missing.labels = F)
system("rm -r anescum* __M*")
library(foreign)
anes <- read.dta("/Users/liding/E/Bdata/Course/2R/stanford/Tutorial2data/anescum.dta", warn.missing.labels = F)
system("rm -r anescum* __M*")
# Keep only some variables and rename
anes <- anes %>%
select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113,
VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
dim(anes)
#--------------------------------------------------------------
# Model 1: demtherm v gender in 2008
levels(anes$gender) <- c(NA, "Male", "Female")
lm1 <- lm(demtherm ~ gender, data = anes)
require(arm)
display(lm1)
anes <- anes %>%
select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113, VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
dim(anes)
libs <- c("plyr", "tidyverse", "ggplot2", "arm")
sapply(libs, require, character.only = TRUE)
anes <- anes %>%
select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113, VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
anes <- read.dta("/Users/liding/E/Bdata/Course/2R/stanford/Tutorial2data/anescum.dta", warn.missing.labels = F)
anes <- anes %>%
select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113, VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
anes <- anes %>%
select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113, VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
anes <- anes %>%
dplyr::select(VCF0004, VCF0101, VCF0104, VCF0106, VCF0140, VCF0113, VCF0114, VCF0301, VCF0310, VCF0604, VCF0838, VCF0218) %>%
rename(c(VCF0004 = "year",
VCF0101 = "age",
VCF0104 = "gender",
VCF0106 = "race",
VCF0140 = "edu",
VCF0113 = "south",
VCF0114 = "income",
VCF0301 = "partyid",
VCF0310 = "interest",
VCF0604 = "govtrust",
VCF0838 = "abortion",
VCF0218 = "demtherm"))
dim(anes)
levels(anes$gender) <- c(NA, "Male", "Female")
lm1 <- lm(demtherm ~ gender, data = anes)
require(arm)
display(lm1)
ci1 <- coef(lm1)[2] + c(-1, 1) * se.coef(lm1)[2] * 1.96
ci1 <- confint(lm1, level = 0.95)[2, ]
est1 <- data.frame(est = coef(lm1)[2],
lb = ci1[1],
ub = ci1[2],
model = "Model 1")
ggplot(est1, aes(x = model, y = est)) +
geom_point() +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0.1) +
geom_hline(yintercept = 0, lty = 2, color = "red") +
xlab("") +
ylab("Female Democrat Thermometer Estimate (Relative to Males)")
pred1 <- predict(lm1,
newdata = data.frame(gender = c("Male", "Female")),
se.fit = T,
interval = "confidence")
pred1 <- data.frame(pred1$fit, gender = c("Male", "Female"))
ggplot(pred1, aes(x = gender, y = fit, color = gender)) +
geom_point() +
geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0.1) +
xlab("") +
ylab("Predicted Democrat Thermometer")
levels(anes$income)[1] <- NA
levels(anes$income) <- with(anes, substr(levels(income), 4, nchar(levels(income))))
anes$age[anes$age == 0] <- NA
lm2 <- lm(demtherm ~ gender + age + income, data = anes)
display(lm2)
ci2 <- confint(lm2, level = 0.95)[2, ]
est2 <- data.frame(est = coef(lm2)[2],
lb = ci2[1],
ub = ci2[2],
model = "Model 2")
est <- rbind(est1, est2)
ggplot(est, aes(x = model, y = est)) +
geom_point() +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0.1) +
geom_hline(yintercept = 0, lty = 2, color = "red") +
xlab("") +
ylab("Female Democrat Thermometer Estimate (Relative to Males)")
newdta <- data.frame(gender = c("Male", "Female"),
age = mean(anes$age, na.rm = T),
income = "34 to 67 percentile")
pred2 <- predict(lm2,
newdata = newdta,
se.fit = T,
interval = "confidence")
pred2 <- data.frame(pred2$fit, gender = c("Male", "Female"))
ggplot(pred2, aes(x = gender, y = fit, color = gender)) +
geom_point() +
geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0.1) +
xlab("\nNote: Estimates condition on income and age") +
ylab("Predicted Democrat Thermometer")
anes_sub <- subset(anes, year >= 1978 & year != 2002)
lm3 <- dlply(anes_sub, .(year), function(x) {
lm(demtherm ~ gender + age + income, data = x)
})
display(lm3$"1990")
# (1)
est_time <- ldply(lm3, function(x) {
c(coef(x)[2], confint(x)[2, ])
})
names(est_time) <- c("year", "est", "lb", "ub")
ggplot(est_time, aes(x = year, y = est)) +
geom_point() +
geom_errorbar(aes(ymin = lb, ymax = ub), width = 0.3) +
geom_hline(yintercept = 0, lty = 2, color = "red") +
xlab("") +
ylab("Female Democrat Thermometer Estimate (Relative to Males)")
pred_time <- ldply(lm3, function(x) {
predict(x, newdata = newdta, se.fit = T, interval = "confidence")$fit
})
pred_time$gender <- rep(c("Male", "Female"), 13)
ggplot(pred_time, aes(x = year, y = fit, color = gender)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = upr, ymin = lwr, fill = gender),
alpha = 0.15, color = NA) +
xlab("\nNote: Estimates condition on income and age") +
ylab("Predicted Democrat Thermometer")
pred_time$gender <- rep(c("Male", "Female"), 14)
ggplot(pred_time, aes(x = year, y = fit, color = gender)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymax = upr, ymin = lwr, fill = gender),
alpha = 0.15, color = NA) +
xlab("\nNote: Estimates condition on income and age") +
ylab("Predicted Democrat Thermometer")
lm4 <- lm(demtherm ~ gender + age + income + age:gender, data = anes)
display(lm4)
agerange <- 18:85
newdta <- data.frame(expand.grid(gender = c("Male", "Female"),
age = agerange),
income = "34 to 67 percentile")
pred4 <- predict(lm4,
newdata = newdta,
se.fit = T,
interval = "confidence")
pred4 <- data.frame(cbind(pred4$fit, newdta))
head(pred4)
ggplot(pred4, aes(x = age, y = fit, color = gender)) +
geom_point() +
geom_line(aes(y = lwr), lty = 3) +
geom_line(aes(y = upr), lty = 3) +
ylab("Democrat Thermometer Ratings") +
xlab("Age")
anes_sub <- subset(anes, age %in% 20:70)
anes_sub$age_cat <- cut(anes_sub$age, breaks = seq(20, 70, by = 5))
head(anes_sub)
lm5 <- lm(demtherm ~ gender + income + age_cat + + age_cat:gender,
data = anes_sub)
display(lm5)
agerange <- sort(as.character(unique(na.omit(anes_sub$age_cat))))
newdta <- data.frame(expand.grid(gender = c("Male", "Female"),
age_cat = agerange),
income = "34 to 67 percentile")
pred5 <- predict(lm5,
newdata = newdta,
se.fit = T,
interval = "confidence")
pred5 <- data.frame(cbind(pred5$fit, newdta))
ggplot(pred5, aes(x = age_cat, y = fit, color = gender)) +
geom_point() +
geom_line(aes(y = lwr, group = gender), lty = 3) +
geom_line(aes(y = upr, group = gender), lty = 3) +
geom_line(aes(y = fit, group = gender), lty = 1, alpha = 0.5) +
ylab("Democrat Thermometer Ratings") +
xlab("Age Category") +
theme_bw()
des(cgss2013)
table(cgss2013$a4)
table(cgss2013$edu)
summary(cgss2013$a8a)
ggplot(cgss2013,aes(x=a3a),y(a8a))+
geom_point()
ggplot(cgss2013,aes(x=a3a,y=a8a))+
geom_point()
cgss2013 <- cgss2013 %>%
mutate(lninc=ln(a8a+1))
cgss2013 <- cgss2013 %>%
mutate(lninc=log(a8a+1,exp(1))
)
ggplot(cgss2013,aes(x=a3a,y=lninc))+
geom_point()
cgss2013 <- cgss2013 %>%
mutate(lninc=log(a8a,exp(1)))
ggplot(cgss2013,aes(x=a3a,y=lninc))+
+ geom_point()
ggplot(cgss2013,aes(x=a3a,y=lninc))+ geom_point()
cgss2013 <- cgss2013 %>%
mutate(lninc=log10(a8a+1))
ggplot(cgss2013,aes(x=a3a,y=lninc))+ geom_point()
cgss2013 <- cgss2013 %>%
mutate(lninc=log10(a8a+1))
ggplot(cgss2013,aes(x=2013-a3a,y=lninc))+ geom_point()
