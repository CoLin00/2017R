sjt.lm(linear.1, linear.2, probit.model)
library(sjPlot)
sjt.lm(linear.1, linear.2, probit.model)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE,show.fstat = TRUE, show.se = TRUE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE, show.se = TRUE)
printo(linear.1, linear.2, probit.model, title="Regression Results", align=TRUE, type = 'html', header = FALSE)
printo((attitude), type = 'html', header = FALSE,table.attr = "class=nofluid", no.space=TRUE,caption = "Try modify stargazer")
printo(linear.1, linear.2, probit.model, title="Regression Results", align=TRUE, no.space=TRUE, type = 'html', header = FALSE)
printo(linear.1, linear.2, probit.model, title="中文标题会不会出问题", align=TRUE, no.space=TRUE, type = 'html', header = FALSE)
sjt.lm(linear.1, linear.2, probit.model,show.ci=FALSE, show.std = TRUE, show.aic = TRUE, show.se = TRUE)
library(hrbrthemes)
library(rvest)
library(tidyverse)
if (!require(hrbrthemes)) install.packages('hrbrthemes')
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup() %>%
ggplot(aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
View(data)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026"))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gg_animate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate
gganimate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
gapminder <- read.csv("https://stat.duke.edu/~mc301/data/gapminder.csv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
getwd()
library(wpp2017)
library(ggplot2)
library(tidyverse)
library(stringr)
data(popM)
data(tfr)
data(tfrprojMed)
data(tfrproj80l)
data(tfrproj80u)
data(tfrproj95l)
data(tfrproj95u)
data(tfrprojHigh)
data(tfrprojLow)
tfr <- tfr %>%
filter(country_code==156)
tfrprojMed <- tfrprojMed %>%
filter(country_code==156) %>%
mutate(p="M")
tfrproj80l<- tfrproj80l %>%
filter(country_code==156)%>%
mutate(p="l80")
tfrproj80u<- tfrproj80u %>%
filter(country_code==156)%>%
mutate(p="u80")
tfrproj95l<- tfrproj95l %>%
filter(country_code==156)%>%
mutate(p="l95")
tfrproj95u <- tfrproj95u %>%
filter(country_code==156)%>%
mutate(p="u95")
tfrprojHigh<- tfrprojHigh %>%
filter(country_code==156)%>%
mutate(p="H")
tfrprojLow<- tfrprojLow %>%
filter(country_code==156)%>%
mutate(p="L")
tfrp <- rbind(tfrprojMed,tfrproj80l,tfrproj80u,tfrproj95l,
tfrproj95u,tfrprojHigh,tfrprojLow)
tfrp2 <- tfr %>%
inner_join(tfrp, by = "country_code") %>%
select(-c(1:2,name.y)) %>%
gather(year,tfr,1:30) %>%
mutate(year=as.integer(str_sub(year, 1, 4)))
ggplot(tfrp2,aes(x=year,y=tfr,pch=p,color=p,group=p)) +
geom_point() +
geom_line() +
ylab("TFR") +
theme(axis.text.x  = element_text(angle=90, vjust=0.5))
2.4+4.2+5.9
24-9
attr(tfr)
attr(tfr,dim
)
attr(tfr,“dim”）
attr(tfr,“dim”)
attr(tfr,"dim")
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
view(nc_bike_crash)
View(nc_bike_crash)
class(nc_bike_crash)
library(haven)
account <- read_sas("~/E/learning/Statistics/SAS/SAS金融数据分析/fdata/account.sas7bdat")
View(account)
library(haven)
X2015cgss20160803 <- read_dta("~/DATA/CGSS/2015/2015cgss20160803.dta")
View(X2015cgss20160803)
table(X2015cgss20160803$s1)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
cgss2013 <- read.dta("~/DATA/CGSS/2013/cgss2013_14.dta",encoding="gbk")
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta",encoding = "gb2312")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013_14 <- read_sav("~/DATA/CGSS/2003-2013/2013/cgss2013_14.sav")
View(cgss2013_14)
str(cgss2013_14)
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2003$a4)
str(cgss2013$a4)
str(cgss2013$a5)
names(cgss2013)
table(cgss2013$a10)
get_labels(cgss2013$a10)
sjlabelled::get_labels(cgss2013$a10)
sys.getenv("phantomjs")
Sys.getenv("phantomjs")
Sys.setenv(phantomjs="/Users/liding/anaconda/phantomjs/bin")
Sys.getenv("phantomjs")
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京"
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library(magrittr)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
Sys.getenv("phantomjs")
library(rJava);
library(Rwordseg);
library(tmcn);
require(rJava)
java -version
require(openNLP)
install.packages("openNLP")
install.packages("openNLP")
library(Rwordseg);
library(rJava);
require(openNLP)
library(tmcn);
library(Rwordseg);
install.packages("Rwordseg", repos = "http://R-Forge.R-project.org")
install.packages("Rwordseg", repos = "http://R-Forge.R-project.org")
library(Rwordseg);
install.packages("rJava", type = "source")
install.packages("rJava", type = "source")
library(rJava);
library(Rwordseg);
library(tmcn);
install.packages("rJava")
install.packages("rJava")
library(rJava);
library(Rwordseg);
library(tmcn);
library(rJava);
library(tmcn);
library(Rwordseg);
library(Rwordseg);
library(rJava);
library(tmcn);
library(Rwordseg);
library(rJava);
library(Rwordseg);
library(tmcn);
library(rJava);
library(tmcn);
library(Rwordseg);
remove.packages("rJava")
library(rJava);
.libPaths().
.libPaths()
remove.packages("rJava","/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(rJava);
library(rJava);
install.packages("rJava")
library(rJava);
library(tmcn);
library(Rwordseg);
.libPaths()
library(rJava);
library(tmcn);
library(Rwordseg);
remove.packages("rJava")
library(xml2)
library(xml)
library(XML)
rm(ls=list())
rm(list=ls())
library(httr)
url<-"http://bj.xiaozhu.com/fangzi/5098280314.html"
html<-GET(url)
headers(html)
str(html)
cookies(html)
doc<-content(html,"raw")
doc<-content(html,"text")
setwd("/Users/liding/E/Bdata/liding17/2017R/l145spider")
cat(doc,file="xiaozhu.html")
xml_find_all(doc,"//h4")
doc<-content(html,"parsed")
xml_find_all(doc,"//h4")
doc[h4]
doc[[//h4]]
doc[//h4]
library(RCurl)
html<-getURL(url)
doc <- read_html(html)
doc <- read_html(url)
xml_find_first(doc,"//h4")
xml_find_all(doc,"//h4")
xml_find_all(doc,"//h4")[1]
xml_find_all(doc,"//h4/em")
xml_text(xml_find_all(doc,"//h4/em"))
xml_find_all(doc,"//title")
xml_text(xml_find_all(doc,"//title"))
xml_find_all(doc, c("//h6 | //h4"))
xml_find_all(doc, "//a[@class='lorder_name']")[[1]]
html<-getURL(url)
doc<-htmlParse(html, encoding = "utf-8")
nodi = getNodeSet(doc, path ="//h6")
xmlValue(nodi[[1]])
nodi[[1]]
xmlGetAttr(nodi[[2]],'class')
xmlGetAttr(nodi[[1]],'class')
nodi[[2]]
sapply(nodi, xmlValue)
setwd("/Users/liding/E/Bdata/liding17/2017R/l13text/intro/data")
lecture<-read.csv("samgov1.csv",encoding="utf-8")
write.csv(lecture,file"samgov11.csv",sep=",",quote=TRUE)
write.csv(lecture,file="samgov11.csv",sep=",",quote=TRUE)
write.csv(lecture,file="samgov11.csv",row.names=FALSE,quote=TRUE)
write.csv(lecture,file="samgov11.csv",row.names=FALSE,quote=TRUE,eol="\n")
install.packages("RSelenium")
system("java -jar \"/Users/liding/anaconda/selenium-server-standalone-3.8.1.jar\"",wait = FALSE,invisible = FALSE)
library("RSelenium")
library("magrittr")
library("xml2")
eCap <- list(phantomjs.page.settings.userAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0")
remDr <- remoteDriver(browserName = "phantomjs", extraCapabilities = eCap)
myresult<-function(remDr,url){
###初始化一个数据框，用作后期收据收集之用！
myresult<-data.frame()
###调用后台浏览器（因为是plantomjs这种无头浏览器（headless），所以你看不到弹出窗口）
remDr$open()
###打开导航页面（也就是直达要抓取的目标网址）
remDr$navigate(url)
###初始化一个计时器（用于输出并查看任务进度）
i = 0
while(TRUE){
#计时器开始计数：
i = i+1
#范回当前页面DOM
pagecontent<-remDr$getPageSource()[[1]]
#以下三个字段共用一部分祖先节点，所以临时建立了一个根节点（节省冗余代码）
con_list_item       <- pagecontent %>% read_html() %>% xml_find_all('//ul[@class="item_con_list"]/li')
#职位名称
position.name       <- con_list_item %>% xml_attr("data-positionname")
#公司名称
position.company    <- con_list_item %>% xml_attr("data-company")
#职位薪资
position.salary     <- con_list_item %>% xml_attr("data-salary")
#职位详情链接
position.link       <- pagecontent %>% read_html() %>% xml_find_all('//div[@class="p_top"]/a') %>% xml_attr("href")
#职位经验要求
position.exprience  <- pagecontent %>% read_html() %>% xml_find_all('//div[@class="p_bot"]/div[@class="li_b_l"]') %>% xml_text(trim=TRUE)
#职位所述行业
position.industry   <- pagecontent %>% read_html() %>% xml_find_all('//div[@class="industry"]') %>% xml_text(trim=TRUE) %>% gsub("[[:space:]\\u00a0]+|\\n", "",.)
#职位福利
position.bonus      <- pagecontent %>% read_html() %>% xml_find_all('//div[@class="list_item_bot"]/div[@class="li_b_l"]') %>% xml_text(trim=TRUE) %>% gsub("[[:space:]\\u00a0]+|\\n", "/",.)
#职位工作环境
position.environment<- pagecontent %>% read_html() %>% xml_find_all('//div[@class="li_b_r"]') %>% xml_text(trim=TRUE)
#收集数据
mydata<- data.frame(position.name,position.company,position.salary,position.link,position.exprience,position.industry,position.bonus,position.environment,stringsAsFactors = FALSE)
#将本次收集的数据写入之前创建的数据框
myresult<-rbind(myresult,mydata)
#系统休眠0.5~1.5秒
Sys.sleep(runif(1,0.5,1.5))
#判断页面是否到尾部
if ( pagecontent %>% read_html() %>% xml_find_all('//div[@class="page-number"]/span[1]') %>% xml_text() !="30"){
#如果页面未到尾部，则点击下一页
remDr$findElement('xpath','//div[@class="pager_container"]/a[last()]')$clickElement()
#但因当前任务进度
cat(sprintf("第【%d】页抓取成功",i),sep = "\n")
} else {
#如果页面到尾部则跳出while循环
break
}
}
#跳出循环后关闭remDr服务窗口
remDr$close()
#但因全局任务状态（也即任务结束）
cat("all work is done!!!",sep = "\n")
#返回最终数据
return(myresult)
}
url <- "https://www.lagou.com/zhaopin"
myresult <- myresult(remDr,url)
remDr <- remoteDriver(browserName = "phantomjs", extraCapabilities = eCap)
remDr <- remoteDriver(remoteServerAddr="localhost",
port=4444L,
browserName = "phantomjs", extraCapabilities = eCap)
remDr$open()
remDr <- remoteDriver(remoteServerAddr="localhost",
port=4444L,
browserName = "phantomjs", extraCapabilities = eCap)
remDr$open()
remDr <- remoteDriver(remoteServerAddr="localhost",
port=4444L,
browserName = "phantomjs", extraCapabilities = eCap)
remDr$open()
stopifnot(Sys.which("phantomjs") != "")
library(magrittr)
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京"
library("rdom")
library(XML)
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE) %>% `[[`(1)
names(tbl) <- names(tbl) %>% stri_conv(from="utf-8")
DT::datatable(tbl)
library(stringi)
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE) %>% `[[`(1)
names(tbl) <- names(tbl) %>% stri_conv(from="utf-8")
DT::datatable(tbl)
library("rvest")
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京" %>% xml2::url_escape(reserved ="][!$&'()*+,;=:/?@#")
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京"
URL%>% xml2::url_escape(reserved ="][!$&'()*+,;=:/?@#")
xpath <- css_to_xpath("div.con_l > div.pho_info > h4")
library(selectr)
querySelectorAll(doc, "div.con_l > div.pho_info > h4")
xpath <- css_to_xpath("div.con_l > div.pho_info > h4")
xpath
remDr$open()
eCap <- list(phantomjs.page.settings.userAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:29.0) Gecko/20120101 Firefox/29.0")
remDr <- remoteDriver(remoteServerAddr="localhost",
port=4444L,
browserName = "phantomjs", extraCapabilities = eCap)
remDr$open()
system("java -jar \"/Users/liding/anaconda/selenium-server-standalone-3.8.1.jar\"",wait = FALSE,invisible = FALSE)
