library(tidyverse)
if (!require(hrbrthemes)) install.packages('hrbrthemes')
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup() %>%
ggplot(aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
View(data)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16) +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026"))
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme_ipsum_rc(grid="XY", base_size = 16)
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ") +
theme(legend.direction = "horizontal") +
theme(legend.position=c(0.8, 1.05))
ggplot
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
if (!require(rvest)) install.packages('rvest')
library(tidyverse)
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
data <- mutate_at(ratings, c("approve", "disapprove"), function(x) as.numeric(gsub("%", "", x, fixed=TRUE))/100) %>%
mutate(date = lubridate::dmy(date)) %>%
filter(!is.na(approve)) %>%
group_by(who) %>%
arrange(date) %>%
mutate(dnum = 1:n()) %>%
ungroup()
ggplot(data,aes(dnum, approve, color=who)) +
geom_hline(yintercept = 0.5, size=0.5) +
geom_point(size=0.25) +
scale_y_percent(limits=c(0,1)) +
scale_color_manual(name=NULL, values=c("Obama"="#313695", "Trump"="#a50026")) +
labs(x="Day in office", y="Approval Rating",
title="Presidential approval ratings from day 1 in office",
subtitle="For fairness, data was taken solely from Trump's favorite polling site (Ramussen)",
caption="Data Source: \nCode: ")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gg_animate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate
gganimate(gapminder_plot, filename = "gapminder-gganimate.gif")
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
library(dplyr)
library(gganimate)
library(ggplot2)
library(readr)
gapminder <- read_tsv("gapminderDataFiveYear.tsv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
gapminder <- read.csv("https://stat.duke.edu/~mc301/data/gapminder.csv")
glimpse(gapminder)
gapminder_plot <- ggplot(gapminder) +
aes(x = gdpPercap, y = lifeExp, colour = continent, size = pop,
frame = year) +
geom_point(alpha = 0.4) +
scale_x_log10()
gapminder_plot
gganimate(gapminder_plot, convert='gm convert', filename = "gapminder-gganimate.gif")
getwd()
library(wpp2017)
library(ggplot2)
library(tidyverse)
library(stringr)
data(popM)
data(tfr)
data(tfrprojMed)
data(tfrproj80l)
data(tfrproj80u)
data(tfrproj95l)
data(tfrproj95u)
data(tfrprojHigh)
data(tfrprojLow)
tfr <- tfr %>%
filter(country_code==156)
tfrprojMed <- tfrprojMed %>%
filter(country_code==156) %>%
mutate(p="M")
tfrproj80l<- tfrproj80l %>%
filter(country_code==156)%>%
mutate(p="l80")
tfrproj80u<- tfrproj80u %>%
filter(country_code==156)%>%
mutate(p="u80")
tfrproj95l<- tfrproj95l %>%
filter(country_code==156)%>%
mutate(p="l95")
tfrproj95u <- tfrproj95u %>%
filter(country_code==156)%>%
mutate(p="u95")
tfrprojHigh<- tfrprojHigh %>%
filter(country_code==156)%>%
mutate(p="H")
tfrprojLow<- tfrprojLow %>%
filter(country_code==156)%>%
mutate(p="L")
tfrp <- rbind(tfrprojMed,tfrproj80l,tfrproj80u,tfrproj95l,
tfrproj95u,tfrprojHigh,tfrprojLow)
tfrp2 <- tfr %>%
inner_join(tfrp, by = "country_code") %>%
select(-c(1:2,name.y)) %>%
gather(year,tfr,1:30) %>%
mutate(year=as.integer(str_sub(year, 1, 4)))
ggplot(tfrp2,aes(x=year,y=tfr,pch=p,color=p,group=p)) +
geom_point() +
geom_line() +
ylab("TFR") +
theme(axis.text.x  = element_text(angle=90, vjust=0.5))
2.4+4.2+5.9
24-9
attr(tfr)
attr(tfr,dim
)
attr(tfr,“dim”）
attr(tfr,“dim”)
attr(tfr,"dim")
list(
Obama="http://m.rasmussenreports.com/public_content/politics/obama_administration/obama_approval_index_history",
Trump="http://m.rasmussenreports.com/public_content/politics/trump_administration/trump_approval_index_history"
) %>%
map_df(~{
read_html(.x) %>%
html_table() %>%
.[[1]] %>%
tbl_df() %>%
select(date=Date, approve=`Total Approve`, disapprove=`Total Disapprove`)
}, .id="who") -> ratings
view(nc_bike_crash)
View(nc_bike_crash)
class(nc_bike_crash)
library(haven)
account <- read_sas("~/E/learning/Statistics/SAS/SAS金融数据分析/fdata/account.sas7bdat")
View(account)
library(haven)
X2015cgss20160803 <- read_dta("~/DATA/CGSS/2015/2015cgss20160803.dta")
View(X2015cgss20160803)
table(X2015cgss20160803$s1)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
library(haven)
cgss2010n <- read_dta("~/DATA/CGSS/2010/cgss2010n.dta",encoding="GB2312")
View(cgss2010n)
cgss2013 <- read.dta("~/DATA/CGSS/2013/cgss2013_14.dta",encoding="gbk")
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013 <- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013.dta",encoding = "gb2312")
View(cgss2013)
str(cgss2013)
library(haven)
cgss2013_14 <- read_sav("~/DATA/CGSS/2003-2013/2013/cgss2013_14.sav")
View(cgss2013_14)
str(cgss2013_14)
library(haven)
cgss2013<- read_dta("~/DATA/CGSS/2003-2013/2013/cgss2013_14.dta")
View(cgss2013)
str(cgss2003$a4)
str(cgss2013$a4)
str(cgss2013$a5)
names(cgss2013)
table(cgss2013$a10)
get_labels(cgss2013$a10)
sjlabelled::get_labels(cgss2013$a10)
sys.getenv("phantomjs")
Sys.getenv("phantomjs")
Sys.setenv(phantomjs="/Users/liding/anaconda/phantomjs/bin")
Sys.getenv("phantomjs")
URL<-"https://www.aqistudy.cn/historydata/monthdata.php?city=北京"
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library(magrittr)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
library("rdom")
tbl <- rdom(URL) %>% readHTMLTable(header=TRUE)  %>% `[[`(1)
Sys.getenv("phantomjs")
install.packages("jmv")
library(jmv)
?jmv::anova
data('ToothGrowth')
jmv::anova(ToothGrowth,
dep = 'len',
factors = c('supp', 'dose'))
head(ToothGrowth)
linReg(data = Prestige, dep = 'income',
blocks = list(c('education', 'prestige', 'women')))
data('Prestige', package='car')
linReg(data = Prestige, dep = 'income',
blocks = list(c('education', 'prestige', 'women')))
devtools::install_github("walshc/nightlights")
install.packages('Rnightlights')
library(rJava);
library(Rwordseg);
library(tmcn);
setwd("/Users/liding/E/Bdata/liding17/2017R/l13text/intro/data")
a <-"十八大以来，中央在选用干部的思路上强调不搞表面文章、唯才是用、注重实效，布小林此番进步，正因为她是符合实际需要的人选，可谓举贤不避亲。"
nchar(a) #计算字符串长度
strsplit(a,split="，") #字符串切割
avec <- unlist(strsplit(a,split="，"))  #字符串拼接
paste(avec,collapse=",")
substr(a, 1,13)  #字符串截取
lecture<-read.csv("samgov1.csv",encoding="utf-8")
head(lecture)
library(jiebaR)
engine<-worker()
words<-"想学R语言，那就赶紧拿起手机，打开微信，关注公众号《跟着菜鸟一起学R语言》，跟着菜鸟一块飞。"
segment(words,engine)
engine_s<-worker(stop_word = "stopwords.txt")
segment(words,engine_s)
setwd("/Users/liding/E/Bdata/liding17/2017R/l13text/intro/data")
engine_s<-worker(stop_word = "stopwords.txt")
segment(words,engine_s)
engine_s<-worker(stop_word = "stopword.txt")
segment(words,engine_s)
rm(list=ls())
library(maps)         ## Projections
library(maptools)     ## Data management
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(gstat)        ## Geostatistics
library(splancs)      ## Kernel Density
library(spatstat)     ## Geostatistics
library(pgirmess)     ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(spgwr)        ## GWR
setwd("/Users/liding/E/Bdata/liding17/2017R/l12spa/intro")	## Mac
# setwd("C:\\") 					## Windows
load("Datasets.RData")
ls()
data <- crime
sp_point <- cbind(data$LONG, data$LAT)
colnames(sp_point) <- c("LONG","LAT")
head(sp_point)
proj <- CRS("+proj=utm +zone=17 +datum=WGS84")
data.sp <- SpatialPointsDataFrame(coords=sp_point,data,proj4string=proj)
bbox(data.sp)
par(mar=c(2,2,0.2,0.2))
plot(data.sp,pch=16, cex=.5, axes=T)
dev.off()
summary(election)
names(election)
data <- election
proj4string(data) <- CRS("+proj=lcc+lon_0=90w +lat_1=20n +lat_2=60n")
#spTransform
summary(data)[1:4]
par(mar=c(0,0,0,0))
plot(data)
par(mar=rep(0.5,4))
plot(election,xlim=bbox(data.sp)[1,],ylim=bbox(data.sp)[2,],col="beige")
plot(data.sp,pch=1, cex=.5,add=T, col="blue")
data2<-election[election@data$STATE_NAME=="Texas",]
#proj4string(data2)<- CRS("+proj=utm +zone=20 +datum=WGS84")
plot(data2)
par(mar=c(0,10,0,0),cex=.6)
display.brewer.all(n=5)
setwd("/Users/liding/E/Bdata/liding17/2017R/l12spa/intro")
## Let's open a world map Shapefile
map <- readShapePoly("world",IDvar="MAP_CCODE",proj4string=CRS("+proj=eqc +lon_0=90w"))          ## Equidistant Cylindrical
summary(map)
par(mar=rep(0,4))
plot(map)
polity <- read.csv("polity.csv")
names(polity)
m_ccode <- as.data.frame(map)
merged <- merge(x=m_ccode, y=polity, by.x="CCODE", by.y="ccode", all.x=T, all.y=F)
merged <- merged[order(merged$MAP_CCODE),]
rownames(merged) <- map$MAP_CCODE
map2 <- spCbind(map,merged)
names(map2)
## Remove duplicate rows
map2$CCODE.1 <- NULL
map2$SP_ID.1 <- NULL
map2$COUNTRY.1 <- NULL
map2$MAP_CCODE.1 <- NULL
## Recode Polity variable
map2$polity <- ifelse(map2$polity==-66,NA,map2$polity)
map2$polity <- ifelse(map2$polity==-77,NA,map2$polity)
map2$polity <- ifelse(map2$polity==-88,NA,map2$polity)
## Plot POLITY scores
dem.palette <- colorRampPalette(c("red", "green"), space = "rgb")
spplot(map2,"polity",col.regions=dem.palette(20), main="Polity IV Democracy Scores (2008)")
library(maps)         ## Projections
library(maptools)     ## Data management
library(sp)           ## Data management
library(spdep)        ## Spatial autocorrelation
library(gstat)        ## Geostatistics
library(splancs)      ## Kernel Density
library(spatstat)     ## Geostatistics
library(pgirmess)     ## Spatial autocorrelation
library(RColorBrewer) ## Visualization
library(classInt)     ## Class intervals
library(spgwr)        ## GWR
setwd("/Users/liding/E/Bdata/liding17/2017R/l12spa/intro")	## Mac
# setwd("C:\\") 					## Windows
load("Datasets.RData")
ls()
head(crime)
data <- crime
sp_point <- cbind(data$LONG, data$LAT)
colnames(sp_point) <- c("LONG","LAT")
head(sp_point)
proj <- CRS("+proj=utm +zone=17 +datum=WGS84")
data.sp <- SpatialPointsDataFrame(coords=sp_point,data,proj4string=proj)
str(data.sp)
bbox(data.sp)
par(mar=c(2,2,0.2,0.2))
plot(data.sp,pch=16, cex=.5, axes=T)
dev.off()
summary(election)
names(election)
data <- election
proj4string(data) <- CRS("+proj=lcc+lon_0=90w +lat_1=20n +lat_2=60n")
proj4string(data) <- CRS("+proj=lcc+lon_0=90w +lat_1=20n +lat_2=60n")
str(data)
plot(data)
bbox(data.sp)
par(mar=rep(0.5,4))
plot(election,xlim=bbox(data.sp)[1,],ylim=bbox(data.sp)[2,],col="beige")
plot(data.sp,pch=1, cex=.5,add=T, col="blue")
dev.off()
data2<-election[election@data$STATE_NAME=="Texas",]
head(data2)
plot(data2)
plot(data2)
display.brewer.all(n=5)
br.palette <- colorRampPalette(c("blue", "red"), space = "rgb")
br.palette(10)
par(mar=c(0,3,0,0),cex=.6)
plot(seq(1,5),cex=10,pch=11,col=br.palette(n=5))
dev.off()
par(mar=c(0,3,0,0),cex=.6)
plot(seq(1,5),cex=10,pch=11,col=br.palette(n=5))
data <- election
summary(data)
var <- data$Bush_pct
proj4string(data) <- CRS("+proj=lcc")
spplot(data, zcol="Bush_pct", col.regions=br.palette(100), main="Percent of County Vote for Bush (2004)")
pal <- br.palette(n=5)
pal
classes_fx <- classIntervals(var, n=5, style="fixed", fixedBreaks=c(0, 10, 25, 50, 75, 100), rtimes = 1)
classes_sd <- classIntervals(var, n=5, style = "sd", rtimes = 1)
classes_fi <- classIntervals(var, n=5, style = "fisher", rtimes = 3)
classes_eq <- classIntervals(var, n=5, style = "equal", rtimes = 1)
classes_km <- classIntervals(var, n=5, style = "kmeans", rtimes = 1)
classes_qt <- classIntervals(var, n=5, style = "quantile", rtimes = 1)
par(mar=c(2,2,2,1)+0.1, mfrow=c(2,3))
plot(classes_fx, pal=pal, main="Fixed Intervals", xlab="", ylab="")
plot(classes_sd, pal=pal, main="Standard Deviation", xlab="", ylab="")
plot(classes_fi, pal=pal, main="Fisher-Jenks", xlab="", ylab="")
plot(classes_km, pal=pal, main="K Means", xlab="", ylab="")
plot(classes_eq, pal=pal, main="Equal Interval", xlab="", ylab="")
plot(classes_qt, pal=pal, main="Quantile", xlab="", ylab="")
cols <- findColours(classes_fx, pal)
par(mar=rep(0,4))
plot(election,col=cols,border=NA)
legend(x="bottom",cex=.7,fill=attr(cols,"palette"),bty="n",legend=names(attr(cols, "table")),title="Percent of County Vote for Bush (2004)",ncol=5)
par(mfrow=c(1,1))
plot(election,col=cols,border=NA)
legend(x="bottom",cex=.7,fill=attr(cols,"palette"),bty="n",legend=names(attr(cols, "table")),title="Percent of County Vote for Bush (2004)",ncol=5)
cols <- ifelse(data$Bush > data$Kerry,"red","blue")
par(mar=rep(0,4))
plot(election,col=cols,border=NA)
legend(x="bottom",cex=.7,fill=c("red","blue"),bty="n",legend=c("Bush","Kerry"),title="Winner of County Vote (2004)",ncol=2)
dev.off()
plot(election,col=cols,border=NA)
legend(x="bottom",cex=.7,fill=c("red","blue"),bty="o",legend=c("Bush","Kerry"),title="Winner of County Vote (2004)",ncol=2)
setwd("/Users/liding/E/Bdata/liding17/2017R/l12spa/intro")
map <- readShapePoly("world",IDvar="MAP_CCODE",proj4string=CRS("+proj=eqc +lon_0=90w"))          ## Equidistant Cylindrical
summary(map)
plot(map)
polity <- read.csv("polity.csv")
names(polity)
m_ccode <- as.data.frame(map)
head(m_ccode)
head(polity)
merged <- merge(x=m_ccode, y=polity, by.x="CCODE", by.y="ccode", all.x=T, all.y=F)
merged <- merged[order(merged$MAP_CCODE),]
rownames(merged) <- map$MAP_CCODE
map2 <- spCbind(map,merged)
names(map2)
names(map)
map2$CCODE.1 <- NULL
map2$SP_ID.1 <- NULL
map2$COUNTRY.1 <- NULL
map2$MAP_CCODE.1 <- NULL
## Recode Polity variable
map2$polity <- ifelse(map2$polity==-66,NA,map2$polity)
map2$polity <- ifelse(map2$polity==-77,NA,map2$polity)
map2$polity <- ifelse(map2$polity==-88,NA,map2$polity)
spplot(map2,"polity",col.regions=dem.palette(20), main="Polity IV Democracy Scores (2008)")
library(rJava);
library(Rwordseg);
library(tmcn);
rm(ls=list())
rm(list=ls())
library(rJava);
library(Rwordseg);
library(tmcn);
